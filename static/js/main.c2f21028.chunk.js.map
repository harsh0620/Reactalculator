{"version":3,"sources":["Component/Layout.js","Component/OutputRow.js","Component/Output.js","App.js","serviceWorker.js","index.js"],"names":["Layout","useState","input","setInput","result","setResult","handleChange","event","value","target","res","eval","err","undefined","str","substr","length","className","user","answer","type","onClick","OutputRow","props","readOnly","style","textSize","Output","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c2f21028.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Output from \"./Output\";\r\nconst Layout = () => {\r\n  let [input, setInput] = useState(\"0\");\r\n  let [result, setResult] = useState(\"\");\r\n  const handleChange = (event) => {\r\n    const value = event.target.value;\r\n    if (value === \"=\") {\r\n      if (input !== \"\") {\r\n        let res = \"\";\r\n        try {\r\n          res = eval(input);\r\n        } catch (err) {\r\n          setResult(\"Math error\");\r\n        }\r\n        if (res === undefined) {\r\n          setResult(\"math error\");\r\n        } else {\r\n          setResult(input + \"=\");\r\n          setInput(res);\r\n        }\r\n      }\r\n    } else if (value === \"C\") {\r\n      setInput(\"0\");\r\n      setResult(\"\");\r\n    } else if (value === \"DEL\") {\r\n      let str = input;\r\n      str = str.substr(0, str.length - 1);\r\n      setInput(str);\r\n    } else if (input === \"0\") {\r\n      setInput(value);\r\n    } else {\r\n      setInput((input += value));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"calculator container\">\r\n      <Output user={input} answer={result} />\r\n      <br></br>\r\n      <h1>Calculator</h1>\r\n      <input\r\n        className=\"button clear\"\r\n        type=\"button\"\r\n        value=\"C\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <input\r\n        className=\"button clear\"\r\n        type=\"button\"\r\n        value=\"DEL\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <input\r\n        className=\"button operator\"\r\n        type=\"button\"\r\n        value=\"%\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <input\r\n        className=\"button operator\"\r\n        type=\"button\"\r\n        value=\"/\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <br></br>\r\n      <input\r\n        className=\"button\"\r\n        type=\"button\"\r\n        value=\"7\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <input\r\n        className=\"button\"\r\n        type=\"button\"\r\n        value=\"8\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <input\r\n        className=\"button\"\r\n        type=\"button\"\r\n        value=\"9\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <input\r\n        className=\"button operator\"\r\n        type=\"button\"\r\n        value=\"*\"\r\n        onClick={handleChange}\r\n      ></input>\r\n\r\n      <br></br>\r\n      <input\r\n        className=\"button\"\r\n        type=\"button\"\r\n        value=\"4\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <input\r\n        className=\"button\"\r\n        type=\"button\"\r\n        value=\"5\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <input\r\n        className=\"button\"\r\n        type=\"button\"\r\n        value=\"6\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <input\r\n        className=\"button operator\"\r\n        type=\"button\"\r\n        value=\"-\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <br></br>\r\n      <input\r\n        className=\"button\"\r\n        type=\"button\"\r\n        value=\"1\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <input\r\n        className=\"button\"\r\n        type=\"button\"\r\n        value=\"2\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <input\r\n        className=\"button\"\r\n        type=\"button\"\r\n        value=\"3\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <input\r\n        className=\"button operator\"\r\n        type=\"button\"\r\n        value=\"+\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <br></br>\r\n      <input\r\n        className=\"button\"\r\n        type=\"button\"\r\n        value=\"0\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <input\r\n        className=\"button operator\"\r\n        type=\"button\"\r\n        value=\".\"\r\n        onClick={handleChange}\r\n      ></input>\r\n      <input\r\n        className=\"button operator\"\r\n        type=\"button\"\r\n        value=\"=\"\r\n        onClick={handleChange}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nconst OutputRow = (props) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        readOnly\r\n        className=\"screen\"\r\n        style={props.textSize}\r\n        value={props.value}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\nexport default OutputRow;\r\n","import React from \"react\";\r\nimport OutputRow from \"./OutputRow\";\r\nconst Output = (props) => {\r\n  return (\r\n    <div>\r\n      <OutputRow value={props.answer} />\r\n      <OutputRow value={props.user} />\r\n    </div>\r\n  );\r\n};\r\nexport default Output;\r\n","import React from \"react\";\nimport Layout from \"./Component/Layout\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}